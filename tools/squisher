#!/bin/bash

#
# Squish a CM otapackage for distribution
# cyanogen
#

. ${ANDROID_BUILD_TOP}/vendor/axxion/tools/colors

OUT_TARGET_HOST=`uname -a | grep Darwin`
if [ -z "$OUT_TARGET_HOST" ]
then
   OUT_TARGET_HOST=linux-x86
   MD5=md5sum
   XARGS="xargs --max-args=1 --max-procs `grep 'processor' /proc/cpuinfo|wc -l`"
   SED=sed
else
   OUT_TARGET_HOST=darwin-x86
   MD5=md5
   XARGS="xargs -n 1 -P `sysctl hw.ncpu | awk '{print $2}'`"
   SED=gsed
fi

if [ -z "$OUT" -o ! -d "$OUT" ]; then
    echo -e ${red}"ERROR: $0 only works with a full build environment. $OUT should exist."${txtrst}
    exit 1
fi

if [ "$TARGET_BUILD_TYPE" = "debug" ]; then
    OTAPACKAGE=$OUT/${TARGET_PRODUCT}_debug-ota-$TARGET_BUILD_VARIANT.$USER.zip
elif [ "$TARGET_BUILD_VARIANT" = "userdebug" ]; then
    OTAPACKAGE=$OUT/$TARGET_PRODUCT-ota-eng.$USER.zip
else
    OTAPACKAGE=$OUT/$TARGET_PRODUCT-ota-$TARGET_BUILD_VARIANT.$USER.zip
fi
if [ ! -f "$OTAPACKAGE" ]; then
    echo -e ${red}"$OTAPACKAGE doesn't exist!"${txtrst};
    exit 1
fi

OPTICHARGER=$ANDROID_BUILD_TOP/vendor/axxion/tools/opticharger
QUIET=-q
DELETE_BINS="applypatch applypatch_static check_prereq recovery updater"

REPACK=$OUT/repack.d
echo -e ${bldcya}"Sanitizing environment..."${txtrst}
rm -rf $REPACK
mkdir -p $REPACK


# Unpack the otapackage and opticharge all apks
mkdir $REPACK/ota
(
cd $REPACK/ota
echo -e ${bldgrn}"Unpacking${txtrst}: ${grn}$OTAPACKAGE..."${txtrst}
unzip $QUIET $OTAPACKAGE
echo -e ""
cd $REPACK/ota/system/framework
$OPTICHARGER framework-res.apk
cd $REPACK/ota/system/app
find ./ -name \*.apk | $XARGS $OPTICHARGER
cd $REPACK/ota/system/priv-app
find ./ ! -name 'CMS.apk' -name \*.apk | $XARGS $OPTICHARGER
)

# Fix build.prop
$SED -i \
    -e '/ro\.kernel\.android\.checkjni/d' \
    -e '/ro\.build\.type/s/eng/user/' \
    $REPACK/ota/system/build.prop

# Delete AXXION specific files
if [ -f $ANDROID_BUILD_TOP/vendor/axxion/tools/squisher.rm ]; then
    for RM_FILE in `cat $ANDROID_BUILD_TOP/vendor/axxion/tools/squisher.rm`; do
        rm -f $REPACK/ota/$RM_FILE
    done
fi

# Delete target product specific files
if [ -f $ANDROID_BUILD_TOP/vendor/axxion/tools/$TARGET_PRODUCT-squisher.rm ]; then
    for RM_FILE in `cat $ANDROID_BUILD_TOP/vendor/axxion/tools/$TARGET_PRODUCT-squisher.rm`; do
        rm -f $REPACK/ota/$RM_FILE
    done
fi

# Delete unnecessary binaries
( cd $REPACK/ota/system/bin; echo $DELETE_BINS | xargs rm -f; )

# Strip modules
[ -d $REPACK/ota/system/lib/modules ] && \
    find $REPACK/ota/system/lib/modules -name "*.ko" -print0 | xargs -0 arm-eabi-strip --strip-unneeded

# Determine what to name the new signed package
if [ -z "$CYANOGEN_NIGHTLY" ]; then
    AXXIONVERSION=`grep 'ro.axxion.version=' $REPACK/ota/system/build.prop | sed -e 's/ro.axxion.version=//g'`
    AXXIONDEVICE=`grep 'ro.axxion.device=' $REPACK/ota/system/build.prop | sed -e 's/ro.axxion.device=//g'`
    ABIGEN=`grep 'ro.product.cpu.abi=' $REPACK/ota/system/build.prop | sed -e 's/ro.product.cpu.abi=//g'`
    OUTFILE=$OUT/$AXXIONVERSION-$AXXIONDEVICE.zip
    echo -e ""; echo -e "${bldred}AxxionKat${bldylw}-VERSION${txtrst}:${cya} $AXXIONVERSION"${txtrst}; echo -e ""
else
    OUTFILE=$OUT/update-squished.zip
fi

if [ -n $ABIGEN ]; then
    echo ${cya}"Packing in Pre-Built Libs for CPU Variant:${ylw}$ABIGEN"${txtrst}
    cp ${ANDROID_BUILD_TOP}/vendor/axxion/prebuilt/libs/$ABIGEN/libbypass.so $REPACK/ota/system/lib/libbypass.so
    echo ""
fi

# Pack it up and sign
echo -e ${grn}"Zipping package..."${txtrst}
( cd $REPACK/ota; zip $QUIET -r $REPACK/update.zip . )
echo -e ${grn}"Signing package..."${txtrst}
SECURITYDIR=$ANDROID_BUILD_TOP/build/target/product/security
java -Xmx1024m \
    -jar $OUTDIR/host/$OUT_TARGET_HOST/framework/signapk.jar \
    -w $SECURITYDIR/testkey.x509.pem $SECURITYDIR/testkey.pk8 \
    $REPACK/update.zip $OUTFILE
echo -e ${grn}"Cleaning up..."${txtrst}
rm -rf $REPACK

# Create a md5 checksum image of the repacked package
(
img=`basename $OUTFILE`
cd `dirname $OUTFILE`
$MD5 $img >$img.md5sum
ZIPSIZE=`ls -lah $OUTFILE | awk '{ print $5}'`
echo -e ""; echo -e ${bldgrn}"Package complete:"${txtrst}
echo -e ${cya}"ZIP LOCATION:${ylw}  $OUTFILE"${txtrst}

if [ "$OUT_TARGET_HOST" == "linux-x86" ]
then
   echo -e ${cya}"MD5: ${ylw} `cat $img.md5sum | awk '{print $1}'`"${txtrst}
else
   echo -e ${cya}"MD5: ${ylw} `cat $img.md5sum | awk '{print $4}'`"${txtrst}
fi

echo -e ${cya}"SIZE:${ylw} $ZIPSIZE"${txtrst}
MD5VAL=`cat $img.md5sum  | awk '{ print $1 }'`
DEVICE=`echo -e $TARGET_PRODUCT | cut -d "_" -f 2`



echo -e ""
echo -e ${bldred}
echo -e "=-=-=-=-=-=-=-=-=-==-=-=-=-==-=-=-=-==-=-=-=-==-=-=-=-==-=-=-=-==-=-=-=-=-="
echo -e "    ___              _             __         __     ____  ____  __  ___"
echo -e "   /   |  _  ___  __(_)___  ____  / /______ _/ /_   / __ \/ __ \/  |/  /"
echo -e "  / /| | | |/_/ |/_/ / __ \/ __ \/ //_/ __ \`/ __/  / /_/ / / / / /|_/ / "
echo -e " / ___ |_>  <_>  </ / /_/ / / / / ,< / /_/ / /_   / _, _/ /_/ / /  / /  "
echo -e "/_/  |_/_/|_/_/|_/_/\____/_/ /_/_/|_|\__,_/\__/  /_/ |_|\____/_/  /_/   "
echo -e "                                                                        "
echo -e "                                                                                                                                                               "
echo -e "=-=-=-=-=-=-=-=-=-==-=-=-=-==-=-=-=-==-=-=-=-==-=-=-=-==-=-=-=-==-=-=-=-==-="
echo -e "                                                                                                                                                               "
echo -e ${bldppl}
echo -e "<<--(( You have finished building AxxionKat ))-->>                                                                                          "     
echo -e "                                                               "                                                                                                           
echo -e ${bldylw}                                                               
echo -e "<---{= Thanks for compiling us, enjoy! =}---->                                                                                            "
echo -e "                                                                               "
echo -e ${bldcyan}                                                                                                 
echo -e "// Check out our community or XDA threads to keep in touch for news and support! //                                                                    " 
echo -e "                                                                                                                                                               "

echo -e ${bldcya}"====================== Build information ====================================="
echo -e ${ppl}" | Package complete:${ylw} $OUTFILE"${txtrst}
echo -e ${bldcya}" |-------------------------------------------------------------------------------"${txtrst}
echo -e ${redrev}"| ZIP: $img"${txtrst}                                                            
echo -e ${ylwrev}"| MD5: $(cat $img.md5sum | awk '{ print $1 }')"${txtrst}
echo -e ${pplrev}" | SIZE: $ZIPSIZE "${txtrst}                                                  
echo -e ${cyarev}" | DEVICE: $DEVICE "${txtrst}                                
echo -e ${bldcya}"====================== Now flash that shit ======================================="
echo -e ""
)
